metric:
  enable: false
  format:
    type: ndjson
    statsdprefix:
    statsdmaxlen: 512
    verbosity : 4
  watch:
  #   - type: statsd
  #   - type: fs
  #   - type: net
  #   - type: http
  #   - type: dns
  #   - type: process
  transport:
    type: tcp
    host: cribl01
    port: 10070
    tls:
      enable: false
      validateserver: true
      cacertpath: ''
event:
  enable: true
  format:
    type: ndjson
    maxeventpersec: 10000
    enhancefs: true
  watch:
    - type: file
      name: .*
      # name: (\/logs?\/)|(\.log$)|(\.log[.\d]|) # matches the filename
      value: .*                               # matches data read or written
    - type: console
      name: (stdout)|(stderr) # matches the output stream
      value: .*               # matches data written
      allowbinary: false
    - type: net
      name: .*
      field: .*
      value: .*
    - type: fs
      name:  .*
      field: .*
      value: .*
    - type: dns
      name: .*
      field: .*
      value: .*
    - type: http
      name: .*         # event name; http.req or http.resp
      field: .*        # matches field names; duration, http_status, etc
      value: .*        # matches field values
      headers:          # list of filters matched against header names   
        - .*                # example of case-insensitive filter
  transport:
    type: tcp
    host: cribl01
    port: 10070
    # type: file
    # path: '/tmp/events.log'
    tls:
      enable: false
      validateserver: true
      cacertpath: ''
payload:
  enable: false
  dir: '/tmp'
libscope:
  configevent: true
  summaryperiod : 10
  commanddir : '/tmp'
  log:
    level: warning
    transport:
      type: file
      path: '/tmp/scope.log'
      buffer: line
cribl:
  enable: false
  transport:
    type: tcp
    host: cribl01
    port: 10070
    tls:
      enable: false
      validateserver: true
      cacertpath: ''
tags:
  container_name: appscope03
protocol:
custom:
